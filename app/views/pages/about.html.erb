<h1>Web Application Report</h1>
<p>Samuel Gubler, Lawrence Williams, Jeffrey Thompson</p>
<h2>Description:</h2>
<p>This app is designed to allow HOA communities to mark vehicles in the community for parking violations.  When a vehicle is found in violation of a parking rule, the vehicle information can be recorded and submitted with photo proof of violation.  Residents can also register their vehicle information with an email address to receive notifications of violations.  The app features a no login required approach to help the app be as easy to use as possible for basic uses like viewing violations and registering a vehicle.  At this point the app uses basic authentication to allow actions such as deleting violations and registrations, along with showing and editing registrations.  This is because ordinary users should not be able to view other people’s registered vehicles as well as delete violations.</p>
<h2>Database Schema:</h2>
<img src="/assets/database_design.png" alt="Database Schema" />
<h2>Contributions:</h2>
<h3>Samuel:</h3>
<p>I worked on the initial scaffolding of the app.  This included setting up the controllers for violations, and registrations along with the static pages of ‘About’ and ‘Milestones’.  When creating the controllers this also created the models for violations and registrations.  After working with registrations for a little bit I realize I had forgotten to add the field for email address to be saved to the model.  This means I had to setup a database migration to include email address in the data being saved.</p>
<p>I also worked on the mockups for our layout design.  The original designs were done in HTML but weren’t following the layout sketched on paper.  They also weren’t easily viewed.</p>
<p>I implemented the basic authentication for areas of the app that shouldn’t be accessible to ordinary users.  Areas that we felt shouldn’t be accessed by everyone were the list of registrations,deleting a registration, editing a registration, showing a registration, editing a violation, and deleting a violation.  For the basic authentication we used the username/password pair of: admin/password.  If this app were to be used by anyone we would encourage them to change this setup.</p>
<p>I also tested the web services that are built automatically with rails.  JSON data can be returned by adding a .json onto the end of the url where data can be retrieved like a list of violations.  In the case of data that is protected by authentication, a simple authentication header with the ‘Basic admin password’ as the value will return the requested data.</p>
<p>With the help of Lawrence, I also finished the second mailer that is sent when a violation is reported on a vehicle that has been registered with the app.</p>
<h3>Lawrence:</h3>
<p>CheapAsFree.com is my domain that I setup over a year ago for my own projects. I changed the DNS A record of my domain to point to the IP address of my home's router. I then setup port forwarding on the router to allow port 80, as well as other ports for running development copies of the code. As port forwarding was being setup I made sure to setup SSH as well as user accounts for my team so that we would all have access to this shared server sitting in my apartment. Since I owned the machine we did not have to worry about any hosting quotas, restrictions, or costs other than the cost of Internet access and electricity.</p>
<p>In order to keep the development server running even after we closed our SSH session, I setup the linux program screen to allow persistent sessions on the server. This involved installing screen and learning how to use it, then making a tutorial so that the whole team could share sessions and be able to access the development server instance. We each had our own personal git repositories for working on the code but we needed one centralized git repository that only ran code on the master branch with the latest updates. The development server instance that we shared always ran in this repository with only clean and updated copies of our code. Part of my responsibilities included making sure the server was functioning well on port 80 which is our "production" instance of our website.</p>
<p>I was responsible for setting up mailing as well as connecting the rails mailer to my CheapAsFree.com SMTP mail server. This involved learning how to generate a mailer with Rails and how to update the generated code. I created the welcome e-mail and set it up to run whenever a new user registers their vehicle. I also made an iteration of an e-mail process that would involve sending an e-mail on violations but ultimately it was replaced by a more completed version. After figuring out how the rails mailer works and configuring it, I helped Sam create the mailer that sends e-mails on violations. This helped us all better understand how mailing works in Rails.</p>
<p>I have also tried to make quick edits as the need arose, such as editing text or polishing HTML. I updated the .gitignore to help keep our individual repositories clean of images that were uploaded to our development servers. I helped make sure a few merges went through as well as updates to documentation of our project.</p>
<p>Finally I HTML-ified this report to make it easier to view.</p>
<h3>Jeffrey:</h3>
<p>Awaiting Jeff’s write up.</p>
<p>Jeff worked on the layout of the views.  He put a lot of time into the background of the app along with stylizing of text fields and labels.  Unfortunately this code broke some of the authentication features.  So to keep a working code base we reverted to working code and have pushed his layout to http://www.cheapasfree.com:3000.  This will show you the layout he has been working on.</p>
<h2>Future Work:</h2>
<p>Given the continued development of this app, there are several things we would change.  First we would add to the mailers a link that would access the list of registrations and give them options for editing or deleting the registration.  Accompanying this would be a feature on the app to request an email be resent for a list for registered vehicles to a given email address.  This way users can modify their own registrations.  Another feature would be to setup a link for emails to not only be sent to  the owner of the vehicle in violation but also a list of emails setup in a HOA board members table.  This way board members would be notified of violations as well.  We would also link in a way to contact a tow company if interested.</p>
<h2>URL</h2>
<p><a href="http://CheapAsFree.com/">http://CheapAsFree.com/</a></p>
